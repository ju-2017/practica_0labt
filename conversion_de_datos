#include<iostream>
#include<string>
#include<math.h>

using namespace std;

/*
int NumStringToInt(string numero)
{
        // Complete esta función siguiendo las recomendaciones anteriores
}
*/

long int NumStringToInt(string);


 int main()
{

  // rango de tipo int -2147483645 a 2147483646
   string nuevoingreso="45734589";

  // cout<<"tamano "<<nuevoingreso.length()<<endl<<endl;
 cout<<NumStringToInt(nuevoingreso)<<endl<<endl; // dato que ingresa el usuario
 return 0;
}

 long int NumStringToInt(string ingreso)

  {
   string ingreso1="00000000000";
   char aux1=48;
   long int valor=0;   //asignamos un long int que permite valores mayores que int
  int tamanoIngreso=ingreso.length(); //tamaño del string ingresado
  int tamanoNumero;

  if (ingreso[0]==45)
            {
      ingreso[0]==48;
        tamanoNumero=tamanoIngreso-1;
        if (tamanoNumero>10)
              {
            cout<<"String demasiado grande"<<endl;
            return -1;

                 }else{

            for (int x=1;x<tamanoIngreso;x++) {aux1=ingreso[x];ingreso1[(x)+(11-tamanoIngreso)]=aux1;}
            for (int j=1;j<(11-tamanoIngreso);j++) {ingreso1[j]='0';}

            if (ingreso1[1]>(48+2)) {cout<<"Numero fuera de rango"<<endl;return -1;}
            if (ingreso1[1]==(48+2) && ingreso1[2]>(48+1)) {cout<<"Numero fuera de rango"<<endl;return -1;}
            if (ingreso1[1]==(48+2) && ingreso1[2]==(48+1) && ingreso1[3]>(48+4)) {cout<<"Numero fuera de rango"<<endl;return -1;}
            if (ingreso1[1]==(48+2) && ingreso1[2]==(48+1) && ingreso1[3]==(48+4) && ingreso1[4]>(48+7)) {cout<<"Numero fuera de rango"<<endl;return -1;}
            if (ingreso1[1]==(48+2) && ingreso1[2]==(48+1) && ingreso1[3]==(48+4) && ingreso1[4]==(48+7) && ingreso1[5]>(48+4)){cout<<"Numero fuera de rango"<<endl;return -1;}
            if (ingreso1[1]==(48+2) && ingreso1[2]==(48+1) && ingreso1[3]==(48+4) && ingreso1[4]==(48+7) && ingreso1[5]==(48+4) && ingreso1[6]>(48+8)){cout<<"Numero fuera de rango"<<endl;return -1;}
            if (ingreso1[1]==(48+2) && ingreso1[2]==(48+1) && ingreso1[3]==(48+4) && ingreso1[4]==(48+7) && ingreso1[5]==(48+4) && ingreso1[6]==(48+8) && ingreso1[7]>(48+3)){cout<<"Numero fuera de rango"<<endl;return -1;}
            if (ingreso1[1]==(48+2) && ingreso1[2]==(48+1) && ingreso1[3]==(48+4) && ingreso1[4]==(48+7) && ingreso1[5]==(48+4) && ingreso1[6]==(48+8) && ingreso1[7]==(48+3) && ingreso1[8]>(48+6)){cout<<"Numero fuera de rango"<<endl;return -1;}
            if (ingreso1[1]==(48+2) && ingreso1[2]==(48+1) && ingreso1[3]==(48+4) && ingreso1[4]==(48+7) && ingreso1[5]==(48+4) && ingreso1[6]==(48+8) && ingreso1[7]==(48+3) && ingreso1[8]==(48+6) && ingreso1[9]>(48+4)){cout<<"Numero fuera de rango"<<endl;return -1;}
            if (ingreso1[1]==(48+2) && ingreso1[2]==(48+1) && ingreso1[3]==(48+4) && ingreso1[4]==(48+7) && ingreso1[5]==(48+4) && ingreso1[6]==(48+8) && ingreso1[7]==(48+3) && ingreso1[8]==(48+6) && ingreso1[9]==(48+4) && ingreso1[10]>(48+7)){cout<<"Numero fuera de rango"<<endl;return -1;}

                        }

    } else
       {

          tamanoNumero=tamanoIngreso;


             if (tamanoNumero>10)
          {
       cout<<"El string es demasiado grande"<<endl;
              return -3;
            } else
                 {

                for (int x=0;x<tamanoIngreso;x++) {aux1=ingreso[x];ingreso1[(x)+(10-tamanoIngreso)]=aux1;}
                for (int j=0;j<(10-tamanoIngreso);j++) {ingreso1[j]='0';}


       if (ingreso1[0]>(48+2)) {cout<<"Numero fuera de rango"<<endl;return -1;}
       if (ingreso1[0]==(48+2) && ingreso1[1]>(48+1)) {cout<<"Numero fuera de rango"<<endl;return -1;}
       if (ingreso1[0]==(48+2) && ingreso1[1]==(48+1) && ingreso1[2]>(48+4)) {cout<<"Numero fuera de rango"<<endl;return -1;}
       if (ingreso1[0]==(48+2) && ingreso1[1]==(48+1) && ingreso1[2]==(48+4) && ingreso1[3]>(48+7)) {cout<<"Numero fuera de rango"<<endl;return -1;}
       if (ingreso1[0]==(48+2) && ingreso1[1]==(48+1) && ingreso1[2]==(48+4) && ingreso1[3]==(48+7) && ingreso1[4]>(48+4)){cout<<"Numero fuera de rango"<<endl;return -1;}
       if (ingreso1[0]==(48+2) && ingreso1[1]==(48+1) && ingreso1[2]==(48+4) && ingreso1[3]==(48+7) && ingreso1[4]==(48+4) && ingreso1[5]>(48+8)){cout<<"Numero fuera de rango"<<endl;return -1;}
       if (ingreso1[0]==(48+2) && ingreso1[1]==(48+1) && ingreso1[2]==(48+4) && ingreso1[3]==(48+7) && ingreso1[4]==(48+4) && ingreso1[5]==(48+8) && ingreso1[6]>(48+3)){cout<<"Numero fuera de rango"<<endl;return -1;}
       if (ingreso1[0]==(48+2) && ingreso1[1]==(48+1) && ingreso1[2]==(48+4) && ingreso1[3]==(48+7) && ingreso1[4]==(48+4) && ingreso1[5]==(48+8) && ingreso1[6]==(48+3) && ingreso1[7]>(48+6)){cout<<"Numero fuera de rango"<<endl;return -1;}
       if (ingreso1[0]==(48+2) && ingreso1[1]==(48+1) && ingreso1[2]==(48+4) && ingreso1[3]==(48+7) && ingreso1[4]==(48+4) && ingreso1[5]==(48+8) && ingreso1[6]==(48+3) && ingreso1[7]==(48+6) && ingreso1[8]>(48+4)){cout<<"Numero fuera de rango"<<endl;return -1;}
       if (ingreso1[0]==(48+2) && ingreso1[1]==(48+1) && ingreso1[2]==(48+4) && ingreso1[3]==(48+7) && ingreso1[4]==(48+4) && ingreso1[5]==(48+8) && ingreso1[6]==(48+3) && ingreso1[7]==(48+6) && ingreso1[8]==(48+4) && ingreso1[9]>(48+7)){cout<<"Numero fuera de rango"<<endl;return -1;}



                }
}

  char cadena[tamanoIngreso];         // declaracion de un array tipo char
  for (int i=0;i<tamanoIngreso;i++)

    {
      cadena[i]=ingreso[i];  //casting implicito de char_string a char simple, asignando
    }


  if (cadena[0]==45)   //comienza if de string negativo
         {

              cadena[0]=48;
            // cout<<"cadena "<<cadena<<endl;        // Algoritmo de inversion de posiciones de un arreglo
             char cadenaInvertida[tamanoIngreso];

             for (int i=0;i<tamanoIngreso;i++)
             for (int j=0;j<tamanoIngreso;j++)

            {
             char aux=cadena[i];
             cadena[i]=cadenaInvertida[j];
             cadenaInvertida[j]=aux;
             }

        // cout<<"cadena invertida "<<cadenaInvertida<<endl;


         for (int i=0; i<tamanoIngreso;i++)

             {
              valor=valor+((cadenaInvertida[i]-48)*pow(10,i)); //calcula el valor del array sumando los pesos
              }




       valor=-valor;

      if(valor<-2147483645)
        {
          cout<<"ingrese rango adecuado"<<endl;
          return -1;
        }
              else{
      return valor;
      }


    }  // termina if de string negativo

  else
    {
        //  cout<<"cadena "<<cadena;        // Algoritmo de inversion de posiciones de un arreglo
          char cadenaInvertida[tamanoIngreso];
          for (int i=0;i<tamanoIngreso;i++)
          for (int j=0;j<tamanoIngreso;j++)

       {

      char aux=cadena[i];
      cadena[i]=cadenaInvertida[j];
      cadenaInvertida[j]=aux;

      }

       // cout<<"cadena invertida "<<cadenaInvertida;



      for (int i=0; i<tamanoIngreso;i++)

         {

          valor=valor+((cadenaInvertida[i]-48)*pow(10,i)); //calcula el valor del array sumando los pesos

         }

      if(valor>2147483646)
        {
          cout<<"ingrese rango adecuado"<<endl;
          return -1;
        }
              else{
      return valor;
      }
    }

}
